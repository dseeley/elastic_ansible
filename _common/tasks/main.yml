---

- include: hostconfig.yml

- include: install-binary.yml

- include: install-plugins.yml

- include: install-config.yml

- include: certs.yml

- name: bootstrap.password
  block:
    - name: Create the keystore if it doesn't exist yet
      command: "{{es_home}}/bin/elasticsearch-keystore create"
      args: { creates: "{{ es_conf_dir }}/elasticsearch.keystore" }

    - name: Check if bootstrap.password in the keystore
      shell: "{{es_home}}/bin/elasticsearch-keystore list bootstrap.password"
      register: elasticsearch_keystore_list

    - name: Add bootstrap.password to keystore
      shell: "printf {{ es_api_basic_auth_password }} | {{es_home}}/bin/elasticsearch-keystore add -x bootstrap.password"
      notify: restart elasticsearch
      when: "'bootstrap.password' not in elasticsearch_keystore_list.stdout_lines"
  become: yes
  become_user: "{{ es_user }}"


- name: flush the handlers, forcing es (re)start
  meta: flush_handlers

- name: wait for elastic port 9200 to be open
  wait_for: host=localhost port=9200 timeout=30


- include: users.yml


- name: Apply ES templates
  uri:
    url: "https://localhost:9200/_template/{{item['name']}}"
    method: PUT
    status_code: 200
    user: "{{es_api_basic_auth_username | default(omit)}}"
    password: "{{es_api_basic_auth_password | default(omit)}}"
    force_basic_auth: yes
    body_format: json
    body: "{{ item['content'] }}"
    validate_certs: no
  with_items: "{{ es_mapping_templates }}"
  run_once: yes
  when: es_mapping_templates is defined
