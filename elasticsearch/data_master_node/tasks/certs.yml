---

- name: elasicsearch/certs | Generate RSA private key
  community.crypto.openssl_privatekey_pipe:
  register: r__openssl_privatekey_pipe
  no_log: true

- name: elasicsearch/certs | Generate CSR
  community.crypto.openssl_csr_pipe:
    privatekey_content: "{{r__openssl_privatekey_pipe.privatekey}}"
    key_usage: ["digitalSignature", "keyEncipherment", "nonRepudiation"]
    key_usage_critical: true
    extended_key_usage: ["clientAuth", "serverAuth"]
    extended_key_usage_critical: true
    subject_ordered: [ { DC: "{{cluster_vars.dns_user_domain}}" }, { CN: "{{ansible_hostname}}.{{cluster_vars.dns_user_domain}}" } ]
    subject_alt_name: |-
      {%- set SANs = ['DNS:' + ansible_hostname,'IP:' + ansible_default_ipv4.address] -%}
      {%- if (cluster_vars.dns_user_domain is defined  and  cluster_vars.dns_user_domain != "") -%}
         {%- set _ = SANs.append('DNS:' + ansible_hostname | regex_replace('-(?!.*-).*') + '.' + cluster_vars.dns_user_domain) -%}
         {%- set _ = SANs.append('DNS:' + ansible_hostname + '.' + cluster_vars.dns_user_domain) -%}
      {%- endif -%}
      {%- if (ansible_default_ipv4.address != ansible_host) -%}
        {%- set _ = SANs.append('IP:' + ansible_host) -%}
      {%- endif -%}
      {{ SANs }}
  register: r__openssl_csr_pipe

- name: elasicsearch/certs | Generate the self-signed certificate
  community.crypto.x509_certificate_pipe:
    provider: ownca
    ownca_content: "{{ssl_ca['ca-crt.pem']}}"
    ownca_privatekey_content: "{{ssl_ca['ca-key.pem']}}"
    csr_content: "{{r__openssl_csr_pipe.csr}}"
    selfsigned_not_after: "+3652d"       # Expiry in 10 years (incl leap years)
  register: r__x509_certificate_pipe

- name: elasicsearch/certs | copy certs to remote
  block:
    - name: elasicsearch/certs | create cert directory on remote
      file: path={{es_ssl_certificate_path}} state=directory owner={{es_user}} group={{es_group}}

    - name: elasicsearch/certs | Copy SSL certificates to remote
      copy:
        content: "{{ item.val }}"
        dest: "{{ item.path }}"
        mode: "{{ item.mode }}"
        owner: "{{es_user}}"
        group: "{{es_group}}"
        force: "{{ 'yes' if recreate_certs is defined and recreate_certs|bool else 'no' }}"
      no_log: true
      with_items:
        - { path: '{{es_ssl_certificate_authority}}', val: "{{ssl_ca['ca-crt.pem']}}", mode: '0644'}
        - { path: '{{es_ssl_certificate}}', val: "{{r__x509_certificate_pipe.certificate}}", mode: '0644'}
        - { path: '{{es_ssl_key}}', val: "{{r__openssl_privatekey_pipe.privatekey}}", mode: '0600'}
  become: true
  notify: restart elasticsearch
