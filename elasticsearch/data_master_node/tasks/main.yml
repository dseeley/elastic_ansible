---

- include_tasks:
    file: hostconfig.yml

- include_tasks:
    file: install-binary.yml

- include_tasks:
    file: install-plugins.yml

- include_tasks:
    file: install-config.yml

- include_tasks:
    file: certs.yml

- name: bootstrap.password
  block:
    - name: Create the keystore if it doesn't exist yet
      command: "{{es_home}}/bin/elasticsearch-keystore create"
      args: { creates: "{{ es_conf_dir }}/elasticsearch.keystore" }

    - name: Check whether bootstrap.password is in the keystore
      shell: "{{es_home}}/bin/elasticsearch-keystore list bootstrap.password"
      register: elasticsearch_keystore_list

    - name: Add bootstrap.password to keystore
      shell: "printf {{ es_api_basic_auth_password }} | {{es_home}}/bin/elasticsearch-keystore add -x bootstrap.password"
      notify: restart elasticsearch
      when: "'bootstrap.password' not in elasticsearch_keystore_list.stdout_lines"
  become: true
  become_user: "{{ es_user }}"

- debug: msg="force elasticsearch restart"
  changed_when: true
  notify: restart elasticsearch
  when: force_elasticsearch_restart is defined  and  force_elasticsearch_restart|bool


- name: flush the handlers, (re)starting elasticsearch, if necessary
  meta: flush_handlers

- name: elasticsearch/main | Ensure elasticsearch is running (e.g. in case an initial run didn't complete or something.  Shouldn't be necessary for 99% of the time.)
  become: true
  block:
    - name: elasticsearch/main | Ensure elasticsearch is running | start & enable elasticsearch service
      service:
        name: elasticsearch
        state: started
        enabled: true
    - name: elasticsearch/main | Ensure elasticsearch is running | wait for port 9200 to be open
      wait_for:
        host: localhost
        port: 9200
        timeout: 300

- include_tasks:
    file: users.yml


- name: Apply elasticsearch templates
  become: true
  become_user: "{{es_user}}"
  uri:
    url: "https://localhost:9200/_index_template/{{item['name']}}"
    method: PUT
    status_code: 200
    user: "{{es_api_basic_auth_username | default(omit)}}"
    password: "{{es_api_basic_auth_password | default(omit)}}"
    force_basic_auth: true
    body_format: json
    body: "{{ item['content'] }}"
    client_cert: "{{es_ssl_certificate if es_ssl_client_authentication=='required' else omit}}"
    client_key: "{{es_ssl_key if es_ssl_client_authentication=='required' else omit}}"
    validate_certs: false
  with_items: "{{ es_index_templates }}"
  run_once: true
  when: es_index_templates is defined
