---

## Restart elasticsearch nodes.  Do each in-turn, ensuring each node is *really* back up (i.e. port 9200 is open) before restarting the next.
## This is an ugly way to do it, but it seems there is no alternative: 'throttle' applied to a block will apply throttle to each element of the block, so it will restart the service one-by-one, then wait for port 9200 one-by-one, which means the entire cluster will be down.  Also, 'throttle' cannot be applied to include/import_tasks.
- name: restart elasticsearch
  become: yes
  action:
    module: '{{ item.module }}'
  args: '{{ item.args }}'
  loop:
    - module: service
      args:
        name: elasticsearch
        state: restarted
        enabled: yes
    - module: wait_for
      args:
        host: localhost
        port: 9200
        timeout: 300
  throttle: 1
